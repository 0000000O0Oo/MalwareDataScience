import pefile
from capstone import *

import pefile, sys, optparse
def getfileName():
    fOptions = optparse.OptionParser()
    fOptions.add_option("-f", "--file", dest="filename", help="Enter the PE file you would like to scan.")
    (rOptions, arguments) = fOptions.parse_args()
    if not rOptions.filename:
        fOptions.error('\n[-] Usage : (python/python3) pefile.py -f "FILE"\n[-] Please specify a target, use --help for more infos.')
    return rOptions.filename

#load the target PE file
pFile = getfileName()

PEFile = pefile.PE(pFile)

# get the address of the program entry point from the program header
entrypoint = PEFile.OPTIONAL_HEADER.AddressOfEntryPoint

# compute memory address where the entry code will be loaded into memory
entrypoint_address = entrypoint + PEFile.OPTIONAL_HEADER.ImageBase

# get the binary code from the PE file object
binary_code = PEFile.get_memory_mapped_image()[entrypoint:entrypoint+100]

# initialize disassembler to disassemble 32 bit x86 Binary Code
disassembler = Cs(CS_ARCH_X86, CS_MODE_32)

# disassemble the code
for instruction in disassembler.disasm(binary_code, entrypoint_address):
    print("{0}\t{1}".format(instruction.mnemonic, instruction.op_str))
